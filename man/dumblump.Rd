% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dumblump.R
\name{dumblump}
\alias{dumblump}
\title{Dumb lump}
\usage{
dumblump(x, threshold = 3, group_prefix = "Group", group_sep = " ")
}
\arguments{
\item{x}{input vector (numeric)}

\item{threshold}{if distance between a number and its nearest neighbour in the dataset is greater than or equal to 'threshold', they will be allocated to the same group (numeric)}

\item{group_prefix}{group names take the form '<group_prefix><group_sep><group_number> (string)}

\item{group_sep}{group names take the form '<group_prefix><group_sep><group_number> (string)}
}
\value{
character vecto
}
\description{
Lump a numeric variable into categorical groups using 'dumblump' algorithm. See details
}
\details{
The dumblump algorithm:
\enumerate{
\item Sort numbers in ascending order
\item For each number, check its distance from the previous number (the closest, lower number in dataset).
\item If distance >= threshold, define a new group. If distance < threshold, 'lump' with the group of the previous number
}

Disadvantages of this method
\enumerate{
\item You can get numbers of substantially different scales in a single group. E.g. If you have a set of numbers 1, 2, 3,4, 5, 6, 7 ...100000.
These will all be classified as a single group unless theres a 'break' of > threshold somewhere along. If this is not what you want,
explore clustering methods
}
}
\examples{
dumblump(c(1, 1, 2, 5,5 , 6, 1, 12, 12))
}
